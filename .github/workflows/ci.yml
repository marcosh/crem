name: Continuous integration
on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch: # allows manual triggering
env:
  # Bump this number to invalidate the GH actions cache
  cache-version: 0

jobs:
  build:
    strategy:
      matrix:
        ghc: ['9.0.2', '9.2.7']
        cabal: ['3.8.1.0', '3.6.2.0', '3.4.1.0']
        os: ['ubuntu-latest', 'macos-latest']
        exclude:
          # Cabal 3.4.1.0 supports GHC version < 9.1
          - cabal: '3.4.1.0'
            ghc: '9.2.7'
          - cabal: '3.4.1.0'
            ghc: '9.4.4'
    runs-on: ${{ matrix.os }}
    name: Build and test with cabal ${{ matrix.cabal }} and GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Haskell
        id: setup-haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-

      - name: Build dependencies
        run: cabal build --only-dependencies

      - name: Build
        run: cabal build

      - name: Test on current dependencies
        run: cabal test

      - name: Test on HEAD dependencies
        run: cabal test --index-state HEAD
    # strategy:
    #   matrix:
    #     ghc: ['90', '92']
    #     os: ['ubuntu-latest', 'macos-latest']
    # runs-on: ${{ matrix.os }}
    # name: Build with GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    # steps:
    # - uses: actions/checkout@v3
    # - uses: cachix/install-nix-action@v18
    #   with:
    #     nix_path: nixpkgs=channel:nixos-22.11
    # - name: Build
    #   run: nix build -L .#crem.ghc${{ matrix.ghc }}
